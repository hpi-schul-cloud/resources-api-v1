---
swagger: "2.0"
info:
  description: "This is the specification fo rthe content of Schul-Cloud.\nYou can\
    \ find more information in the [repository](https://github.com/schul-cloud/resources-api-v1).\n"
  version: "1.0.0"
  title: "Schul-Cloud Content API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "Schul-Cloud Development Team"
    url: "https://schul-cloud.github.io"
  license:
    name: "AGPL"
    url: "https://github.com/schul-cloud/resources-api-v1/blob/master/LICENSE"
host: "virtserver.swaggerhub.com"
basePath: "/niccokunzmann/schul-cloud-content-api/1.0.0"
tags:
- name: "resource"
  description: "learning resources"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/schul-cloud/resources-api-v1#objects"
schemes:
- "https"
- "http"
paths:
  /resources/ids:
    get:
      tags:
      - "resource"
      summary: "Get the ids of all resources of the client"
      operationId: "getResourceIds"
      produces:
      - "application/vnd.api+json"
      parameters: []
      responses:
        200:
          description: "Resources are listed."
          schema:
            $ref: "#/definitions/ResourceIdsResponse"
        401:
          description: "Unauthorized: The client could not be authorized using the\
            \ sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Servers MUST respond with a 406 Not Acceptable status code\
            \ if a request’s Accept header contains the JSON API media type and all\
            \ instances of that media type are modified with media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Servers MUST respond with a 415 Unsupported Media Type status\
            \ code if a request specifies the header Content-Type: application/vnd.api+json\
            \ with any media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
  /resources:
    post:
      tags:
      - "resource"
      summary: "Add new resources to the database"
      operationId: "addResource"
      consumes:
      - "application/vnd.api+json"
      produces:
      - "application/vnd.api+json"
      parameters:
      - in: "body"
        name: "body"
        description: "A resource to add"
        required: true
        schema:
          $ref: "#/definitions/ResourcePost"
      responses:
        201:
          description: "The resource has beed created."
          schema:
            $ref: "#/definitions/ResourceResponse"
          headers:
            Location:
              type: "string"
              description: "The response SHOULD include a Location header identifying\
                \ the location of the newly created resource."
        400:
          description: "Bad Request: The input provided is not valid JSON."
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized: The client could not be authorized using the\
            \ sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "A server MUST return 403 Forbidden in response to an unsupported\
            \ request to create a resource with a client-generated ID."
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Servers MUST respond with a 406 Not Acceptable status code\
            \ if a request’s Accept header contains the JSON API media type and all\
            \ instances of that media type are modified with media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Servers MUST respond with a 415 Unsupported Media Type status\
            \ code if a request specifies the header Content-Type: application/vnd.api+json\
            \ with any media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Unprocessable Entity: The schema of the object provided is\
            \ not a resource."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
    delete:
      tags:
      - "resource"
      summary: "Delete all resources"
      operationId: "deleteResources"
      produces:
      - "application/vnd.api+json"
      parameters: []
      responses:
        204:
          description: "No Content: The resources have been deleted"
        401:
          description: "Unauthorized: The client could not be authorized using the\
            \ sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
  /resources/{resourceId}:
    get:
      tags:
      - "resource"
      summary: "Get a resource."
      operationId: "getResource"
      produces:
      - "application/vnd.api+json"
      parameters:
      - name: "resourceId"
        in: "path"
        description: "ID of resource that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "Resources are listed."
          schema:
            $ref: "#/definitions/ResourceResponse"
        401:
          description: "Unauthorized: The client could not be authorized using the\
            \ sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "No resource with this id was found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Servers MUST respond with a 406 Not Acceptable status code\
            \ if a request’s Accept header contains the JSON API media type and all\
            \ instances of that media type are modified with media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Servers MUST respond with a 415 Unsupported Media Type status\
            \ code if a request specifies the header Content-Type: application/vnd.api+json\
            \ with any media type parameters."
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
    delete:
      tags:
      - "resource"
      summary: "Delete a resource"
      operationId: "deleteResource"
      produces:
      - "application/vnd.api+json"
      parameters:
      - name: "resourceId"
        in: "path"
        description: "ID of resource that needs to be fetched"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content: Resources are listed."
        401:
          description: "Unauthorized: The client could not be authorized using the\
            \ sent credentials."
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "No resource with this id was found"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - basic: []
      - api_key: []
securityDefinitions:
  api_key:
    description: "The server may have security keys for specially trusted applications.\n\
      The Authorization header field includes the identifier 'api-key' and\nthe base64\
      \ encoded api key.\n"
    type: "apiKey"
    name: "Authorization"
    in: "header"
  basic:
    description: "authenticate agains a pre-set authentication provider"
    type: "basic"
definitions:
  Jsonapi:
    type: "object"
    required:
    - "description"
    - "name"
    - "source"
    properties:
      name:
        type: "string"
        example: "test server"
        description: "The name of the server."
      source:
        type: "string"
        example: "https://github.com/schul-cloud/schul_cloud_resources_server_tests"
        description: "The implementation of ther server, i.e. the repository."
      description:
        type: "string"
        example: "This is a test server to use for continuous integration."
        description: "A description of the server."
    description: "an object describing the server’s implementation"
  ResourceResponse:
    type: "object"
    required:
    - "jsonapi"
    properties:
      jsonapi:
        $ref: "#/definitions/Jsonapi"
      links:
        $ref: "#/definitions/ResourceResponse_links"
      data:
        $ref: "#/definitions/ResourceResponse_data"
    description: "The posted object http://jsonapi.org/format/#crud-creating-responses"
  ResourcePost:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ResourcePost_data"
  ResourceType:
    type: "string"
    description: "The type of the resource."
    enum:
    - "resource"
  Resource:
    type: "object"
    description: "$ref: \"https://github.com/schul-cloud/resources-api-v1/raw/master/schemas/resource/resource.json\""
    example:
      title: "Example Website"
      url: "https://example.org"
      licenses: []
      mimeType: "text/html"
      contentCategory: "l"
      languages:
      - "en-en"
      thumbnail: "http://cache.schul-cloud.org/thumbs/k32164876328764872384.jpg"
  ResourceIdsResponse:
    type: "object"
    required:
    - "data"
    - "jsonapi"
    properties:
      jsonapi:
        $ref: "#/definitions/Jsonapi"
      links:
        $ref: "#/definitions/ResourceIdsResponse_links"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ResourceIdsResponse_data"
  ErrorResponse:
    type: "object"
    required:
    - "errors"
    - "jsonapi"
    properties:
      jsonapi:
        $ref: "#/definitions/Jsonapi"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ErrorElement"
        minItems: 1
  ErrorElement:
    type: "object"
    required:
    - "detail"
    - "status"
    - "title"
    properties:
      status:
        type: "integer"
        example: 401
        description: "The error code as defined on this page: https://httpstatuses.com/"
      title:
        type: "string"
        example: "Unauthozied"
        description: "The error name as defined on this page: https://httpstatuses.com/"
      detail:
        type: "string"
        example: "Username or password are invalid."
        description: "A human readable description on what caused the error and how\
          \ to remove it."
    description: "A JSONAPI error. http://jsonapi.org/format/#errors"
  ResourceResponse_links:
    required:
    - "self"
    properties:
      self:
        type: "string"
        description: "The url to the resource."
  ResourceResponse_data:
    required:
    - "attributes"
    - "id"
    - "type"
    properties:
      id:
        type: "string"
        example: "1"
        description: "The id of the object."
      type:
        type: "string"
        example: "resource"
        description: "The type of the object"
        enum:
        - "resource"
      attributes:
        $ref: "#/definitions/Resource"
  ResourcePost_data:
    required:
    - "attributes"
    - "type"
    properties:
      type:
        $ref: "#/definitions/ResourceType"
      attributes:
        $ref: "#/definitions/Resource"
  ResourceIdsResponse_links:
    required:
    - "self"
    properties:
      self:
        type: "string"
        description: "The url to the listing."
        enum:
        - "/resources/ids"
  ResourceIdsResponse_data:
    required:
    - "id"
    - "type"
    properties:
      type:
        type: "string"
        description: "The type is an id."
        enum:
        - "id"
      id:
        type: "string"
        example: "1"
        description: "The id of the resource."
externalDocs:
  description: "Find out more about the API"
  url: "https://github.com/schul-cloud/resources-api-v1"
